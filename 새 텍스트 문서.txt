✨ 1. 화면 구성 (UI 설계)
아래는 추천하는 화면 구성입니다:

화면 이름	설명
① 메인 대시보드 화면	전체 프로그램 수, 오늘 등록된 추천 수, 사용자 통계 등을 한 눈에 보는 화면
② 프로그램 목록 화면	CSV에서 불러온 1인가구 프로그램 목록을 검색/필터해서 보는 화면
③ 사용자 관리 화면	(옵션) 사용자 정보 등록/수정 (성별, 나이, 지역 등)
④ 프로그램 추천 화면	사용자 조건에 맞는 프로그램을 추천해주는 화면
⑤ 설정 화면	CSV 불러오기, DB 연동, FTP 이미지 복원 같은 설정 기능
🛠 2. 필요한 기능
각 화면별로 필요한 기능도 같이 정리해볼게요:

① 메인 대시보드
 등록된 프로그램 수, 오늘 추천 수 등 간단한 통계

 버튼: “프로그램 목록 보기”, “추천 시작하기” 등

② 프로그램 목록 화면
 CSV 파일에서 프로그램 목록 불러오기

 DataGrid에 프로그램 리스트 표시

 지역, 참여대상(연령/성별) 등 필터 기능

 프로그램 상세정보 보기 기능

③ 사용자 관리 (선택 사항)
 사용자 정보 등록/수정/삭제

 사용자별 추천 이력 보기

④ 프로그램 추천
 사용자 조건(성별, 나이, 거주지 등) 입력

 조건에 맞는 프로그램 자동 필터링

 결과를 DataGrid로 출력

 추천 결과 DB 저장 (선택)

⑤ 설정
 CSV 파일 선택 및 불러오기

 이미지 유효성 검사 및 FTP 복원 기능

 DB 연결 정보 설정


🧩 전체 기능 목록 (기획용)
🔷 1. 프로그램 데이터 관리
기능	설명
CSV 불러오기	'서울시 1인가구 참여 프로그램' CSV 파일을 불러와서 데이터로 변환
목록 보기	프로그램 목록을 DataGrid 형태로 표시
필터링 기능	지역, 성별, 연령대, 운영기관 등으로 필터링
검색 기능	키워드(프로그램명 등)로 검색
상세 보기	선택한 프로그램의 자세한 정보를 팝업/패널로 보여줌
🔷 2. 사용자 정보 관리 (선택 기능)
기능	설명
사용자 등록	이름, 성별, 나이, 지역 등 입력 가능
사용자 수정/삭제	기존 사용자 정보 편집
사용자 목록 보기	등록된 사용자 리스트를 테이블로 출력
🔷 3. 프로그램 추천 시스템
기능	설명
조건 입력	사용자의 성별, 나이, 거주지 등 입력받음
추천 실행	입력된 조건에 맞는 프로그램 자동 필터링
추천 결과 표시	조건에 맞는 추천 결과를 테이블로 보여줌
추천 이력 저장 (선택)	추천 결과를 DB에 저장하여 이후 조회 가능
🔷 4. 알림 기능 (선택 기능)
기능	설명
새 프로그램 자동 감지	새로운 CSV가 업로드되면 변경점 자동 감지
알림 표시	사용자 조건에 맞는 신규 프로그램 발생 시 알림 (예: 팝업 또는 배너)



🧱 전체 개발 순서 (추천 단계별 가이드)
🔰 1단계: 프로젝트 초기 세팅
 WPF 프로젝트 생성 (.NET Core or Framework)

 MVVM 구조 세팅 (View / ViewModel / Model 폴더 생성)

 기본 네비게이션 구조 만들기 (화면 전환용)

📌 목표: 프로젝트 뼈대 만들기 + 화면 간 이동 가능하게 구성

📂 2단계: CSV 기반 프로그램 목록 화면
 CSV 파일 파싱해서 모델로 변환 (ProgramModel.cs)

 ViewModel에서 CSV 로드 로직 작성

 DataGrid로 프로그램 목록 표시 (XAML)

 필터 기능 (지역, 성별, 연령 등) 추가

 검색 기능 추가

📌 목표: "서울시 1인가구 프로그램" 데이터를 UI에 띄우기

🎯 3단계: 사용자 정보 입력 + 추천 기능
 사용자 입력 화면 제작 (성별, 나이, 거주지 등)

 입력된 조건 기반 추천 알고리즘 구현 (필터링)

 추천 결과를 다른 DataGrid에 표시

 추천 이력 저장 (DB 또는 메모리)

📌 목표: “사용자 조건에 맞는 복지 프로그램” 추천 완성

🧠 4단계: 이미지 유효성 검사 + FTP 복원
 썸네일 이미지 존재 여부 확인 (Broken Image Check)

 깨진 이미지 자동 복원 (FTP 연결 및 다운로드)

 상태에 따라 UI에 표시 (예: 아이콘, 색상)

📌 목표: 데이터 완성도 향상 + 비주얼 개선

🧩 5단계: DB 연동 (선택)
 프로그램/사용자/추천 결과를 MSSQL DB에 저장

 EntityFramework 또는 ADO.NET 사용

 추천 이력 조회 기능 추가

📌 목표: 데이터 영속성 확보 + 실제 서비스화 준비

🛠 6단계: 설정/관리 기능 + 다듬기
 CSV 경로, FTP 경로, DB 설정 등 관리 UI 구현

 앱 아이콘, 로딩 스플래시 등 시각적 요소 추가

 예외처리, 에러 메시지, 로그 기록 등 디버깅 기능

📌 목표: 앱 완성도 업그레이드 + 발표 준비
